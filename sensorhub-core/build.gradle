description = 'OSH Core APIs & Components'
ext.details = 'Core components of OpenSensorHub framework'

dependencies {
  api project(':swe-common-core')
  api project(':swe-common-om')
  api project(':sensorml-core')
  api 'ch.qos.logback:logback-classic:1.1.2'
  api 'org.apache.felix:org.apache.felix.framework:4.2.1'
  api 'org.eclipse.jetty:jetty-servlet:9.4.19.v20190610'
  api 'org.eclipse.jetty:jetty-servlets:9.4.19.v20190610'
  api 'org.eclipse.jetty.websocket:websocket-server:9.4.19.v20190610'
  api 'org.eclipse.jetty:jetty-xml:9.4.19.v20190610'
    
  testImplementation project(path: ':sensorml-core', configuration: 'testArtifacts')
  testImplementation 'commons-io:commons-io:1.3.2'
}

// add info to OSGI manifest
jar {
  manifest {
    attributes('Bundle-Vendor': 'Sensia Software LLC')
    attributes('Bundle-Activator': 'org.sensorhub.Activator')
  }
}

// add info to maven pom
ext.pom >>= {
  developers {
    developer {
      id 'alexrobin'
      name 'Alex Robin'
      organization 'Sensia Software LLC'
      organizationUrl 'http://www.sensiasoftware.com' 
    }
  } 
}

task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = 'tests'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

configurations {
  testArtifacts
}

artifacts {
  testArtifacts packageTests
  archives sourcesJar
  archives javadocJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact sourcesJar 
      artifact javadocJar
    }
  }
}
