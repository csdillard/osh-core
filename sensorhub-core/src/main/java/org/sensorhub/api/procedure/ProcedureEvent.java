/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.

Copyright (C) 2012-2015 Sensia Software LLC. All Rights Reserved.

******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.api.procedure;

import org.sensorhub.api.event.Event;
import org.sensorhub.api.event.EventUtils;
import org.sensorhub.api.utils.OshAsserts;


/**
 * <p>
 * Base class for all events that are associated to a particular procedure.<br/>
 * A procedure in SensorHub can be a sensor, a process, etc. but also a group
 * of nested procedures. When using procedure groups, this type of event can
 * be generated by the parent group as well as by group members.
 * </p>
 *
 * @author Alex Robin
 * @since Apr 23, 2015
 */
public abstract class ProcedureEvent extends Event
{
    protected String procedureUID;
    protected transient String sourceID;


    public ProcedureEvent(long timeStamp, String procUID)
    {
        this.timeStamp = timeStamp;
        this.procedureUID = OshAsserts.checkValidUID(procUID);
    }
    
    
    public ProcedureEvent(String procUID)
    {
        this(System.currentTimeMillis(), procUID);
    }


    /**
     * Gets the unique ID of the procedure related to this event.<br/>
     * For procedure groups (e.g. sensor networks), it will be either the UID
     * of the group as a whole (if the event is global) or the UID of a single
     * procedure within the group (if the event applies only to that member)
     * @return Unique ID of related procedure
     */
    public String getProcedureUID()
    {
        return procedureUID;
    }


    @Override
    public String getSourceID()
    {
        if (sourceID == null)
            sourceID = EventUtils.getProcedureSourceID(procedureUID);
        return sourceID;
    }

}
