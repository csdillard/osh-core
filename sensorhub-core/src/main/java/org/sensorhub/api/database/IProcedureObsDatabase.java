/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.
 
Copyright (C) 2019 Sensia Software LLC. All Rights Reserved.
 
******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.api.database;

import org.sensorhub.api.datastore.feature.IFoiStore;
import org.sensorhub.api.datastore.obs.IDataStreamStore;
import org.sensorhub.api.datastore.obs.IObsStore;
import org.sensorhub.api.datastore.procedure.IProcedureStore;


/**
 * <p>
 * Main interface for databases used to store historical observations, metadata
 * about the procedures that generated them, and associated features of interests.
 * </p><p>
 * A given instance of this interface can contain observations generated by
 * one or more procedures.
 * </p>
 *
 * @author Alex Robin
 * @date Sep 17, 2019
 */
public interface IProcedureObsDatabase extends IDatabase
{

    /**
     * @return Data store containing procedure descriptions and their history
     */
    IProcedureStore getProcedureStore();
    
    
    /**
     * @return Data store containing features of interest observed by
     * the procedures contained in this database
     */
    IFoiStore getFoiStore();
    
    
    /**
     * @return Data store containing historical observations generated by
     * the procedures contained in this database
     */
    IObsStore getObservationStore();
    
    
    /**
     * @return Data store containing observation data streams generated by
     * the procedures contained in this database
     */
    default IDataStreamStore getDataStreamStore()
    {
        return getObservationStore().getDataStreams();
    }
    
}
